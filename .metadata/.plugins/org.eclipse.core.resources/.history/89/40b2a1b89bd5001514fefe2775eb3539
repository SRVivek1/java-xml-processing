package com.rpsoft.unmarshal.object.without.root.annotation;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.JAXBIntrospector;
import javax.xml.bind.Marshaller;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.namespace.QName;

public class JavaToXmlApp {

	public static void main(String[] args) throws JAXBException {

		CreateSubscriber createSubscriber = new CreateSubscriber();
		createSubscriber.setSubscriber("subscriber_01");

		JavaToXmlApp.toXml(null);
		
		/*JAXBContext jaxbContext = JAXBContext.newInstance(
				CreateSubscriber.class, RootBinder.class);
		JAXBIntrospector introspector = jaxbContext.createJAXBIntrospector();
		Marshaller marshaller = jaxbContext.createMarshaller();
		marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);

		if (null == introspector.getElementName(createSubscriber)) {
			JAXBElement jaxbElement = new JAXBElement(new QName(
					"createSubscriber"), CreateSubscriber.class,
					createSubscriber);
			marshaller.marshal(jaxbElement, System.out);
		} else {
			marshaller.marshal(createSubscriber, System.out);
		}*/
	}

	// parse object to xml
	public static String toXml(Object object) {

		String xmlResponse = "jaxb-error";

		try {

			JAXBContext jaxbContext = JAXBContext.newInstance(
					CreateSubscriber.class, RootBinder.class);
			JAXBIntrospector introspector = jaxbContext
					.createJAXBIntrospector();
			Marshaller marshaller = jaxbContext.createMarshaller();
			marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT,
					Boolean.TRUE);

			if (null == introspector.getElementName(object)) {
				JAXBElement jaxbElement = new JAXBElement(new QName(
						"createSubscriber"), CreateSubscriber.class, object);
				marshaller.marshal(jaxbElement, System.out);
			} else {
				marshaller.marshal(object, System.out);
			}
		} catch (JAXBException jaxbException) {
			jaxbException.printStackTrace();
		}

		return xmlResponse;
	}

	@XmlRootElement
	public static class RootBinder {

	}

}
